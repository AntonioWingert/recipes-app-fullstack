version: '3.9'
services:
  frontend:
    container_name: app_frontend
    build: ./frontend
    volumes:
      - ./frontend/src:/app-frontend/src
    ports:
      - 3000:3000
    working_dir: /app-frontend
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    container_name: app_backend
    build: ./backend
    ports:
      - 3001:3001
    working_dir: /app-backend
    # Caso queira que o container esteja atualizado durante o desenvolvimento, sem que você precise ficar fazendo down e up dos containers, descomente as 3 linhas abaixo
    command: dev 
    volumes: 
      - ./backend/src:/app-backend/src
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=mysql://root:123456@db:3306/RECIPES_APP_DB?schema=public
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  db:
    container_name: app_db
    build: ./db
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_ROOT_USER=root
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
